<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maicard.money.sql.BankAccount">

	<resultMap id="bankAccountResult" type="BankAccount">
		<result property="bankAccountId" column="bank_account_id" />
		<result property="withdrawMethodId" column="withdraw_method_id" />
		<result property="uuid" column="uuid" />
		<result property="country" column="country" />
		<result property="province" column="province" />
		<result property="city" column="city" />
		<result property="bankName" column="bank_name" />
		<result property="issueBank" column="issue_bank" />
		<result property="bankAccountNumber" column="bank_account_number" />
		<result property="bankAccountName" column="bank_account_name" />
		<result property="bankAccountType" column="bank_account_type" />
		<result property="certifyFile" column="certify_file" />
		<result property="createTime" column="create_time" />
		<result property="lastUseTime" column="last_use_time" />
		<result property="currentStatus" column="current_status" />
		<result property="ownerId" column="owner_id"/>
	</resultMap>

	<sql id="selectColumns">
		bank_account_id,
		withdraw_method_id,
		uuid,
		country,
		province,
		city,
		bank_name,
		issue_bank,
		bank_account_number,
		bank_account_name,
		bank_account_type,
		certify_file,
		create_time,
		last_use_time,
		current_status,
		owner_id
	</sql>

	<insert id="insert" parameterType="BankAccount"
		useGeneratedKeys="true" keyProperty="bankAccountId">
		INSERT INTO bank_account
		(
		<if test="bankAccountId>0">bank_account_id,</if>owner_id, withdraw_method_id,
		uuid,country, province,city, bank_name, issue_bank,
		bank_account_number, bank_account_name, bank_account_type, certify_file,
		create_time, last_use_time, current_status)
		VALUES
		(
		<if test="bankAccountId>0">#{bankAccountId},</if>#{ownerId}, #{withdrawMethodId},
		#{uuid}, #{country}, #{province},#{city}, #{bankName}, #{issueBank},
		#{bankAccountNumber}, #{bankAccountName}, #{bankAccountType}, #{certifyFile},
		#{createTime}, #{lastUseTime}, #{currentStatus})
	</insert>

	<update id="update" parameterType="BankAccount">
		UPDATE
			bank_account
		SET
			withdraw_method_id = #{withdrawMethodId},
			uuid = #{uuid},
			country = #{country},
			province = #{province}, city = #{city}, bank_name = #{bankName}, issue_bank =
			#{issueBank}, bank_account_number = #{bankAccountNumber},
			bank_account_name = #{bankAccountName}, 
			bank_account_type = #{bankAccountType},
			certify_file = #{certifyFile},
			create_time = #{createTime},
			last_use_time = #{lastUseTime},
			current_status = #{currentStatus},	
			owner_id = #{ownerId}
		WHERE
			bank_account_id = #{bankAccountId}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM
		bank_account
		WHERE
		bank_account_id = #{bankAccountId}
	</delete>

	<select id="select" parameterType="int" resultMap="bankAccountResult">
		SELECT
		<include refid="selectColumns" />
		FROM
		bank_account
		WHERE
		bank_account_id = #{bankAccountId}
	</select>

	<sql id="criteriaWhereClause">
		<where>
			<if test="bankAccountId > 0">
				bank_account_id = #{bankAccountId}
			</if>
			<if test="uuid > 0">
				AND uuid = #{uuid}
			</if>
			<if test="inviters !=null and inviters.length > 0">
				AND uuid in (
				<foreach item="item" collection="inviters" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="province != null">
				AND province LIKE concat("%",#{province},"%")
			</if>
			<if test="city != null">
				AND city LIKE concat("%",#{city},"%")
			</if>
			<if test="bankAccountType != null">
				AND bank_account_type = #{bankAccountType}
			</if>
			<if test="bankName != null">
				AND bank_name LIKE concat("%",#{bankName},"%")
			</if>
			<if test="bankAccountName != null">
				AND bank_account_name LIKE concat("%",#{bankAccountName},"%")
			</if>
			<if test="bankAccountNumber != null">
				AND bank_account_number LIKE concat("%",#{bankAccountNumber},"%")
			</if>
			<if test="issueBank != null">
				AND issue_bank LIKE concat("%",#{issueBank},"%")
			</if>
			<if test="currentStatus != null">
				AND current_status in
				<foreach item="item" collection="currentStatus" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="ownerId > 0">
				AND owner_id = #{ownerId}
		</if>
		</where>
	</sql>

	<select id="list" parameterType="BankAccountCriteria" resultMap="bankAccountResult">
		SELECT
		<include refid="selectColumns" />
		FROM
		bank_account
		<include refid="criteriaWhereClause" />
		ORDER BY
		bank_account_id desc
	</select>
	<select id="count" parameterType="BankAccountCriteria"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		bank_account
		<include refid="criteriaWhereClause" />
	</select>
	<update id="setNormalAdd">
		update bank_account set current_status=100001
	</update>
	<update id="setDefaultAdd" parameterType="BankAccount">
		update bank_account set current_status=100003 where
		bank_account_id=#{addressbookid}
	</update>
</mapper>