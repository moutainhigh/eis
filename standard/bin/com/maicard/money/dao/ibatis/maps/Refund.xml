<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Fri Mar 01 18:54:02 CST 2013-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Refund">

	<resultMap id="refundResult" type="Refund">
		<result property="refundId" column="refund_id"/>
		<result property="transactionId" column="transaction_id"/>
		<result property="memory" column="memory"/>
		<result property="currentStatus" column="current_status"/>
		<result property="uuid" column="uuid"/>
		<result property="refPayTransactionId" column="ref_pay_transaction_id"/>
		<result property="startTime" column="start_time"/>
		<result property="endTime" column="end_time"/>
		<result property="inOrderId" column="in_order_id"/>
		<result property="outOrderId" column="out_order_id"/>
		<result property="money" column="money"/>
		<result property="notifyUrl" column="notify_url"/>
		<result property="returnUrl" column="return_url"/>
		<result property="data" column="data" javaType="HashMap" jdbcType="VARCHAR"/>
		
		<result property="ownerId" column="owner_id"/>
	</resultMap>
	
	<sql id="selectColumns">
			refund_id,
			transaction_id,
			memory,
			current_status,
			uuid,
			weight,
			ref_pay_transaction_id,
			start_time,
			end_time,
			in_order_id,
			out_order_id,
			money,
			notify_url,
			return_url,
			data
			owner_id
	</sql>

	<insert id="insert" parameterType="Refund" useGeneratedKeys="true"  keyProperty="refundId">
		INSERT INTO refund
			(<if test="refundId>0">refund_id,</if>owner_id, transaction_id, memory, current_status, uuid, weight, ref_pay_transaction_id, start_time,end_time, in_order_id,out_order_id, notify_url, return_url, data)
		VALUES
			(<if test="refundId>0">#{refundId},</if>#{ownerId}, #{transactionId}, #{memory}, #{currentStatus}, #{uuid}, #{weight}, #{refPayTransactionId}, #{startTime}, #{endTime}, #{inOrderId}, #{outOrderId}, #{notifyUrl}, #{notifyUrl}, #{data, javaType=HashMap, jdbcType=VARCHAR} )
	</insert>

	<update id="update" parameterType="Refund">
		UPDATE
			refund
		SET
			transaction_id = #{transactionId},
			memory = #{memory},
			current_status = #{currentStatus},
			uuid = #{uuid},
			weight = #{weight},
			ref_pay_transaction_id = #{refPayTransactionId},
			start_time = #{startTime},
			end_time = #{endTime},
			in_order_id = #{inOrderId},
			out_order_id = #{outOrderId},
			notify_url = #{notifyUrl},
			return_url = #{returnUrl},
			data = #{data,javaType=HashMap, jdbcType=VARCHAR},			
			owner_id = #{ownerId}
		WHERE
			refund_id = #{refundId}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM
			refund
		WHERE
			refund_id = #{refundId}
	</delete>
	
	<select id="select" parameterType="int" resultMap="refundResult">
		SELECT
			<include refid="selectColumns"/>
		FROM
			refund
		WHERE
			refund_id = #{refundId}
	</select>

	<sql id="criteriaWhereClause">
		<where>
			<if test="currentStatus != null">
				current_status in 
				<foreach item="item" collection="currentStatus" open="(" separator="," close=")">
	        			#{item}
	  			</foreach>				
	  		</if>
	  	<if test="ownerId > 0">
				AND owner_id = #{ownerId}
		</if>
		</where>
	</sql>

	<select id="list" parameterType="RefundCriteria" resultMap="refundResult">
		SELECT
			<include refid="selectColumns"/>
		FROM
			refund
		<include refid="criteriaWhereClause"/>
		ORDER BY
			weight DESC, refund_id ASC
	</select>

	<select id="count" parameterType="RefundCriteria" resultType="int">
		SELECT
			COUNT(*)
		FROM
			refund
		<include refid="criteriaWhereClause"/>
	</select>

</mapper>